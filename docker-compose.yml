version: "3.9"
services:
  postgres:
    image: postgres:14.5
    hostname: entirety-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespw
    volumes:
      - pgdata:/var/lib/postgresql

  adminer:
    image: adminer:4.8.1
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  entirety:
    image: ghcr.io/n5geh/n5geh.tools.entirety2:development
    #    build:
    #      context: .
    #      dockerfile: ./docker/Dockerfile
    restart: unless-stopped
    expose:
      - 8000
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DATABASE_URL: ${DATABASE_URL}
      STATIC_ROOT: ${STATIC_ROOT:-/var/entirety/static/}
      MEDIA_ROOT: ${MEDIA_ROOT:-/var/entirety/media/}
      OIDC_OP_AUTHORIZATION_ENDPOINT: ${OIDC_OP_AUTHORIZATION_ENDPOINT}
      OIDC_OP_JWKS_ENDPOINT: ${OIDC_OP_JWKS_ENDPOINT}
      OIDC_OP_TOKEN_ENDPOINT: ${OIDC_OP_TOKEN_ENDPOINT}
      OIDC_OP_USER_ENDPOINT: ${OIDC_OP_USER_ENDPOINT}
      OIDC_RP_CLIENT_ID: ${OIDC_RP_CLIENT_ID}
      OIDC_RP_CLIENT_SECRET: ${OIDC_RP_CLIENT_SECRET}
      CB_URL: ${CB_URL}
#    For development purposes mostly
#    env_file:
#      - ./app/Entirety/.env
    volumes:
      - static:${STATIC_ROOT:-/var/entirety/static/}
      - media:${MEDIA_ROOT:-/var/entirety/media/}
    depends_on:
      - postgres

  nginx:
    image: nginx:1.23.1
    hostname: ng
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx:/etc/nginx/templates/
      - static:${STATIC_ROOT:-/var/entirety/static/}
      - media:${MEDIA_ROOT:-/var/entirety/media/}
    environment:
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: ".conf"
      WEB_URL: ${WEB_URL:-localhost}
    depends_on:
      - entirety

volumes:
  static:
  pgdata:
  media:
